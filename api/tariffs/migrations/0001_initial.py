# Generated by Django 4.0.6 on 2022-09-05 16:25

import api.tariffs.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('address', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalHubZoneToPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Зона хаба к ценам',
                'verbose_name_plural': 'Зоны хаба к ценам',
                'db_table': 'additional_hubzone_to_price',
            },
        ),
        migrations.CreateModel(
            name='CityToPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.IntegerField(default=0, verbose_name='Расстояние')),
                ('duration', models.IntegerField(default=0, verbose_name='Длительность')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='address.city', verbose_name='В город')),
            ],
            options={
                'verbose_name': 'Город к ценам',
                'verbose_name_plural': 'Города к ценам',
                'db_table': 'city_to_price',
            },
        ),
        migrations.CreateModel(
            name='GlobalAddressToPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.IntegerField(default=0, verbose_name='Расстояние')),
                ('duration', models.IntegerField(default=0, verbose_name='Длительность')),
                ('global_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='address.globaladdress', verbose_name='В глобальный адрес')),
            ],
            options={
                'verbose_name': 'Глобальный адрес к ценам',
                'verbose_name_plural': 'Глобальные адреса к ценам',
                'db_table': 'global_address_to_price',
            },
        ),
        migrations.CreateModel(
            name='HubToPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_hubzone_prices', models.ManyToManyField(to='tariffs.additionalhubzonetoprice', verbose_name='Добавочная стоимость к зонам хаба')),
                ('hub', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='address.hub', verbose_name='Хаб')),
            ],
            options={
                'verbose_name': 'Хаб к ценам',
                'verbose_name_plural': 'Хабы у ценам',
                'db_table': 'hub_to_price',
            },
        ),
        migrations.CreateModel(
            name='IntercityTariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cities', models.ManyToManyField(blank=True, to='tariffs.citytoprice', verbose_name='В города')),
                ('global_addresses', models.ManyToManyField(blank=True, to='tariffs.globaladdresstoprice', verbose_name='В глобальные адреса')),
            ],
            options={
                'verbose_name': 'Межгородской тариф',
                'verbose_name_plural': 'Межгородские тарифы',
                'db_table': 'intercity_tariff',
            },
        ),
        migrations.CreateModel(
            name='IntracityTariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hub_to_prices', models.ManyToManyField(to='tariffs.hubtoprice', verbose_name='Цены к зонам')),
            ],
            options={
                'verbose_name': 'Внутригородской тариф',
                'verbose_name_plural': 'Внутригородские тарифы',
                'db_table': 'intracity_tariff',
            },
        ),
        migrations.CreateModel(
            name='PriceToCarClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_class', models.CharField(choices=[('standart', 'Стандарт'), ('comfort', 'Комфорт'), ('minivan', 'Минивен'), ('business', 'Бизнес'), ('representative', 'Представительский'), ('suv', 'SUV'), ('minibus', 'Микроавтобус'), ('minivan_business', 'Минивен Бизнес'), ('minibus_business', 'Микроавтобус Бизнес'), ('bus30', 'Автобус 30+'), ('bus43', 'Автобус 43+'), ('bus50', 'Автобус 50+')], max_length=64, verbose_name='Класс авто')),
                ('customer_price', models.IntegerField(blank=True, default=None, null=True, verbose_name='Цена заказчика')),
                ('driver_price', models.IntegerField(default=0, verbose_name='Цена водителя')),
            ],
            options={
                'verbose_name': 'Цена к классу авто',
                'verbose_name_plural': 'Цены к классам авто',
                'db_table': 'car_zone_price2car_class',
            },
        ),
        migrations.CreateModel(
            name='ServiceToPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=128, verbose_name='Название')),
                ('slug', models.CharField(default='', max_length=128, verbose_name='Тип')),
                ('prices', models.ManyToManyField(blank=True, to='tariffs.pricetocarclass', verbose_name='Услуга к цене')),
            ],
            options={
                'verbose_name': 'Услуга к ценам',
                'verbose_name_plural': 'Услуги к ценам',
                'db_table': 'service_to_price',
            },
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=128, null=True, verbose_name='Название')),
                ('currency', models.CharField(choices=[('rub', 'Рубль'), ('eur', 'Евро'), ('usd', 'Доллар'), ('cny', 'Юани')], default='rub', max_length=5, verbose_name='валюта')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
                ('is_commission', models.BooleanField(default=False, verbose_name='Комиссионный?')),
                ('lifetime', models.DateTimeField(default=api.tariffs.models.tariff_derault_timelife, verbose_name='Срок жизни')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='address.city', verbose_name='Город')),
                ('intercity_tariff', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tariffs.intercitytariff', verbose_name='межгородской тариф')),
                ('intracity_tariff', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tariffs.intracitytariff', verbose_name='Внутригородской тариф')),
                ('services', models.ManyToManyField(blank=True, to='tariffs.servicetoprice', verbose_name='Цены к услугам')),
            ],
            options={
                'verbose_name': 'Тариф',
                'verbose_name_plural': 'Тарифы',
                'db_table': 'tariff',
            },
        ),
        migrations.AddField(
            model_name='hubtoprice',
            name='prices',
            field=models.ManyToManyField(to='tariffs.pricetocarclass', verbose_name='Цены к классу авто'),
        ),
        migrations.AddField(
            model_name='globaladdresstoprice',
            name='prices',
            field=models.ManyToManyField(to='tariffs.pricetocarclass'),
        ),
        migrations.AddField(
            model_name='citytoprice',
            name='prices',
            field=models.ManyToManyField(to='tariffs.pricetocarclass'),
        ),
        migrations.AddField(
            model_name='additionalhubzonetoprice',
            name='prices',
            field=models.ManyToManyField(to='tariffs.pricetocarclass', verbose_name='Цены к зоне'),
        ),
        migrations.AddField(
            model_name='additionalhubzonetoprice',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='address.hubzone', verbose_name='Зона'),
        ),
    ]
